{"title":"hdu 4401: Battery","content":"这里只给出代码，感兴趣的可以作以参考：\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <queue>\n#include <map>\n#include <set>\n#include <stack>\n#include <ctime>\n#include <functional>\n#include <cmath>\n#include <iostream>\n#include <assert.h>\n#pragma comment(linker, \"/STACK:102400000,102400000\")\n#define max(a, b) ((a) > (b) ? (a) : (b))\n#define min(a, b) ((a) < (b) ? (a) : (b))\n#define mp std :: make_pair\n#define st first\n#define nd second\n#define keyn (root->ch[1]->ch[0])\n#define lson (u << 1)\n#define rson (u << 1 | 1)\n#define pii std :: pair<int, int>\n#define pll pair<ll, ll>\n#define pb push_back\n#define type(x) __typeof(x.begin())\n#define foreach(i, j) for(type(j)i = j.begin(); i != j.end(); i++)\n#define FOR(i, s, t) for(int i = (s); i <= (t); i++)\n#define ROF(i, t, s) for(int i = (t); i >= (s); i--)\n#define dbg(x) std::cout << x << std::endl\n#define dbg2(x, y) std::cout << x << \" \" << y << std::endl\n#define clr(x, i) memset(x, (i), sizeof(x))\n#define maximize(x, y) x = max((x), (y))\n#define minimize(x, y) x = min((x), (y))\nusing namespace std;\ntypedef long long ll;\nconst int int_inf = 0x3f3f3f3f;\nconst ll ll_inf = 0x3f3f3f3f3f3f3f3f;\nconst int INT_INF = (int)((1ll << 31) - 1);\nconst double double_inf = 1e30;\nconst double eps = 1e-14;\nconst double pi = acos(-1.);\ntypedef unsigned long long ul;\ntypedef unsigned int ui;\ninline int readint() {\n    int x;\n    scanf(\"%d\", &x);\n    return x;\n}\ninline int readstr(char *s) {\n    scanf(\"%s\", s);\n    return strlen(s);\n}\n\nclass cmpt {\npublic:\n    bool operator () (const int &x, const int &y) const {\n        return x > y;\n    }\n};\n\nint Rand(int x, int o) {\n    //if o set, return [1, x], else return [0, x - 1]\n    if (!x) return 0;\n    int tem = (int)((double)rand() / RAND_MAX * x) % x;\n    return o ? tem + 1 : tem;\n}\nll ll_rand(ll x, int o) {\n    if (!x) return 0;\n    ll tem = (ll)((double)rand() / RAND_MAX * x) % x;\n    return o ? tem + 1 : tem;\n}\n\nvoid data_gen() {\n    srand(time(0));\n    freopen(\"in.txt\", \"w\", stdout);\n    int kases = 100;\n    //printf(\"%d\\n\", kases);\n    while (kases--) {\n        int L = Rand(1000, 1) + 5;\n        int n = Rand(L - 4, 1) + 3;\n        int buf[1500], p = 0;\n        FOR(i, 1, n) buf[i] = Rand(L, 0);\n        buf[++n] = 0, buf[++n] = L;\n        sort(buf + 1, buf + n + 1);\n        n = unique(buf + 1, buf + n + 1) - buf - 1;\n        printf(\"%d %d\\n\", L, n);\n        int t1 = Rand(13, 0) + 6;\n        int t2 = Rand(13, 0) + 6;\n        while (t2 == t1) {\n            t2 = Rand(13, 0) + 6;\n        }\n        if (t1 > t2) swap(t1, t2);\n        printf(\"%d %d\\n\", t1, t2);\n        FOR(i, 1, n) {\n            printf(\"%d %d\\n\", buf[i], Rand(1000, 1));\n        }\n        puts(\"\\n\");\n    }\n    puts(\"0 0\");\n}\n\nconst int maxn = 1e3 + 10;\npii a[maxn];\nint n, L;\nint t1, t2;\nstruct Line {\n    int lhs, rhs;\n    double theta;\n    int o;\n    Line() {}\n    Line(int _lhs, int _rhs, double _ta, int _o) {\n        lhs = _lhs, rhs = _rhs, theta = _ta, o = _o;\n    }\n    bool operator < (const Line &other) {\n        return theta > other.theta || theta == other.theta && rhs > other.rhs ||\n            theta == other.theta && rhs == other.rhs && lhs > other.lhs;\n    }\n}lines[maxn * maxn];\nint k;\ndouble shadow, H;\nbool inq[maxn];\n\ndouble cal(double theta1, double theta2) {\n    if (abs(theta1 - theta2) < eps) return 0;\n    double X = abs(theta1 - pi / 2) < eps ? 0 : H / tan(theta1);\n    double ret = (cos(theta2) - cos(theta1)) * (L - shadow + X) - H * (sin(theta1) - sin(theta2));\n    shadow += abs(theta2) < eps ? L - shadow : H / tan(theta2) - X;\n    return ret;\n}\n\ndouble solve(int l, int r) {\n    shadow = H = 0;\n    k = 0;\n    FOR(i, 2, n) {\n        inq[i] = 1;\n        H += a[i].nd;\n        double mini = (double)ll_inf;\n        int mk = 0;\n        ROF(j, i - 1, 1) {\n            double ang_tan = (double)a[i].second / (a[i].first - a[j].first);\n            lines[k++] = Line(j, i, atan(ang_tan), 0);\n            if (a[i].second <= a[j].second) break;\n            ang_tan = (double)(a[i].second - a[j].second) / (a[i].first - a[j].first);\n            lines[k++] = Line(j, i, atan(ang_tan), 1);\n        }\n    }\n    double ang_l = pi / 12 * (18 - l), ang_r = pi / 12 * (18 - r);\n    lines[k++] = Line(0, 0, ang_l, 2), lines[k++] = Line(0, 0, ang_r, 3);\n    sort(lines, lines + k);\n    double ans = 0;\n    bool okay = false;\n    double pre = pi / 2;\n    FOR(i, 0, k - 1) {\n        int o = lines[i].o;\n        int lhs = lines[i].lhs, rhs = lines[i].rhs;\n        double ang = lines[i].theta;\n        double res = cal(pre, ang);\n        if (okay) ans += res;\n        if (o == 3) break;\n        else if (o == 2) okay = true;\n        else if (o == 0 && inq[rhs]) inq[rhs] = 0, H -= a[rhs].nd, mk = 1;\n        else if (o == 1 && inq[lhs]) H += a[rhs].nd - a[lhs].nd, inq[lhs] = 0, inq[rhs] = 1, mk = 1;\n        pre = ang;\n    }\n    return abs(ans * 12 / pi);\n}\n\nint main() {\n    //data_gen(); return 0;\n    //C(); return 0;\n    int debug = 0;\n    if (debug) freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    int kases = 0;\n    while (~scanf(\"%d%d\", &L, &n) && n) {\n        ++kases;\n        t1 = readint(), t2 = readint();\n        FOR(i, 1, n) scanf(\"%d%d\", &a[i].st, &a[i].nd);\n        double ans = 0;\n        if (t1 >= 12) ans += solve(t1, t2);\n        else {\n            if (t2 > 12) ans += solve(12, t2), t2 = 12;\n            FOR(i, 1, n) a[i].first = L - a[i].st;\n            FOR(i, 1, n / 2) swap(a[i], a[n + 1 - i]);\n            ans += solve(24 - t2, 24 - t1);\n        }\n        printf(\"%.5f\\n\", ans);\n    }\n    return 0;\n}\n```","author":"pandoxone"}