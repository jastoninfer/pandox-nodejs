{"title":"cf 710E: Generate a String","content":"\n题意：\n\n开始你有数字 $0$ ，你可以用代价 $x$ 将该数字加 $1$ 或减 $1$ （当 $x > 0$ 时），或用代价 $y$ 将该数字变为 $2x$ ，那么问得到数字 $n$ 所需的最少代价是多少。\n\n数据范围 $1 \\leq x, y \\leq 10^9$ ， $1 \\leq n \\leq 10^7$ 。\n\n分析：\n\n记得到数字 $n$ 的代价为 $f(n)$ 。\n\n不加证明地给出如下结论：\n\n注：可以通过观察数的二进制表达形式归纳证明下面的结论。\n\n若 $x = y$ ，则\n\n $1^{\\circ}$ 若 $n$ 为偶数，则 $f(n) = f(\\frac{n}{2}) + y$   $(*)$ \n\n $2^{\\circ}$ 若 $n$ 为奇数，则 $f(n) = min(f(n - 1), f(n + 1)) + x$   $(\\#)$ \n\n把 $(*)$ 当作主式，用 $(\\#)$ 式作为递推中间项，很容易计算出所有偶数位置对应的 $f$ 值，从而计算出所有 $f$ 值。\n\n当 $x, y$ 大小关系不确定时，我们只需修改偶数情况的更新规则。当 $n$ 为偶数时，为了计算 $f(n)$ ，需要归约到 $f(1) = x$ ，在此过程中如果用到加倍操作，那么在当前位置\n\n用效果必然最好（直观上如此，实际也可证明），否则就不用加倍操作。使用加倍操作后转移到 $f(n / 2)$ ，代价为 $y$ ，而不用加倍操作转移到 $f(n / 2)$ 时代价为 $x \\cdot \\frac{n}{2}$ ，使用加倍操作当且仅当 $y <= x \\cdot \\frac{n}{2}$ ，因此将 $(*)$ 更新为：\n\n若 $y <= x \\cdot \\frac{n}{2}$ ， $f(n) =  f(\\frac{n}{2}) + y$ \n\n否则 $f(n) = n \\cdot x$ \n\n可以用记忆话搜索来处理答案，空间复杂度 $O(n)$ ，时间复杂度 $O(log(n))$ 。\n\n此外，还可以通过使用队列首先更新花费代价较小的位置来寻找答案，时间复杂度是 $O(n)$ ，类似于 $\\text{bfs}$ 的过程。\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <queue>\n#include <map>\n#include <set>\n#include <stack>\n#include <ctime>\n#include <functional>\n#include <cmath>\n#include <iostream>\n#include <assert.h>\n#pragma comment(linker, \"/STACK:102400000,102400000\")\n#define max(a, b) ((a) > (b) ? (a) : (b))\n#define min(a, b) ((a) < (b) ? (a) : (b))\n#define mp std :: make_pair\n#define st first\n#define nd second\n#define keyn (root->ch[1]->ch[0])\n#define lson (u << 1)\n#define rson (u << 1 | 1)\n#define pii std :: pair<int, int>\n#define pll pair<ll, ll>\n#define pb push_back\n#define type(x) __typeof(x.begin())\n#define foreach(i, j) for(type(j)i = j.begin(); i != j.end(); i++)\n#define FOR(i, s, t) for(int i = (s); i <= (t); i++)\n#define ROF(i, t, s) for(int i = (t); i >= (s); i--)\n#define dbg(x) std::cout << x << std::endl\n#define dbg2(x, y) std::cout << x << \" \" << y << std::endl\n#define clr(x, i) memset(x, (i), sizeof(x))\n#define maximize(x, y) x = max((x), (y))\n#define minimize(x, y) x = min((x), (y))\nusing namespace std;\ntypedef long long ll;\nconst int int_inf = 0x3f3f3f3f;\nconst ll ll_inf = 0x3f3f3f3f3f3f3f3f;\nconst int INT_INF = (int)((1ll << 31) - 1);\nconst double double_inf = 1e30;\nconst double eps = 1e-14;\ntypedef unsigned long long ul;\ntypedef unsigned int ui;\ninline int readint() {\n    int x;\n    scanf(\"%d\", &x);\n    return x;\n}\ninline int readstr(char *s) {\n    scanf(\"%s\", s);\n    return strlen(s);\n}\n\nclass cmpt {\npublic:\n    bool operator () (const int &x, const int &y) const {\n        return x > y;\n    }\n};\n\nint Rand(int x, int o) {\n    //if o set, return [1, x], else return [0, x - 1]\n    if (!x) return 0;\n    int tem = (int)((double)rand() / RAND_MAX * x) % x;\n    return o ? tem + 1 : tem;\n}\nll ll_rand(ll x, int o) {\n    if (!x) return 0;\n    ll tem = (ll)((double)rand() / RAND_MAX * x) % x;\n    return o ? tem + 1 : tem;\n}\n\nvoid data_gen() {\n    srand(time(0));\n    freopen(\"in.txt\", \"w\", stdout);\n    int kases = 1;\n    //printf(\"%d\\n\", kases);\n    while (kases--) {\n        ll sz = 100000;\n        printf(\"%d\\n\", sz);\n        FOR(i, 1, sz) {\n            int o = Rand(2, 0);\n            int O = Rand(26, 0);\n            putchar(O + (o ? 'a' : 'A'));\n        }\n        putchar('\\n');\n    }\n}\n\nconst int maxn = 1e7 + 10;\nll n, x, y;\nll dp[maxn];\n\nll cal(ll num) {\n    if (dp[num] != -1) return dp[num];\n    if (num == 1) return dp[num] = x;\n    if (num & 1) return dp[num] = x + min(cal(num - 1), cal(num + 1));\n    if ((num >> 1) * x >= y) return dp[num] = y + cal(num >> 1);\n    else return dp[num] = num * x;\n}\n\nint main() {\n    //data_gen(); return 0;\n    //C(); return 0;\n    int debug = 0;\n    if (debug) freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    while (~scanf(\"%lld%lld%lld\", &n, &x, &y)) {\n        clr(dp, -1);\n        ll ans = cal(n);\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n\n//382 81437847 324871127\n```","author":"pandoxone"}